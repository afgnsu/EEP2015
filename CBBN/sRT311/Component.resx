<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serviceManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 134</value>
  </metadata>
  <metadata name="InfoConnection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 212</value>
  </metadata>
  <metadata name="RTLessorAVSCmtyLine.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 173</value>
  </metadata>
  <metadata name="ucRTLessorAVSCmtyLine.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 95</value>
  </metadata>
  <metadata name="View_RTLessorAVSCmtyLine.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <metadata name="RT311.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>266, 81</value>
  </metadata>
  <data name="RT311.CommandText" xml:space="preserve">
    <value>select * from (
select 'Sp399' as casetype, case a.consignee when '' then '直銷' else '經銷' end as belongnc, 
isnull(h.shortnc, g.cusnc) as salesnc, a.comn, a.linearrive as linearrivedat, 
isnull(isnull(e.shortnc, d.cusnc),'') as setnc, j.cusnc, b.usekind as casekind, replace(b.speed,'bps','') as speed, 
case b.paytype when 'M' then '月繳' when 'H' then '年約年繳' when 'Y' then '年約月繳' else '' end as paycycle, 
b.finishdat, b.docketdat, b.dropdat, replace(b.freecode,'N','') as freecode 
from	RTSparqAdslCmty a 
inner join RTSparqAdslCust b on a.cutyid = b.comq1 
left outer join RTEmployee f inner join RTObj g on f.cusid = g.cusid on a.bussid = f.emply 
left outer join RTObj h on h.cusid = a.consignee 
left outer join RTEmployee c inner join RTObj d on c.cusid = d.cusid on b.setsales = c.emply 
left outer join RTObj e on e.cusid = b.profac 
left outer join RTObj j on j.cusid = b.cusid 
where 1=1
union 
select	case a.connecttype when'05' then 'Sp499(On-Net)' else 'Sp499' end as casetype, 
case a.consignee when '' then '直銷' else '經銷' end as belongnc, 
isnull(h.shortnc, g.cusnc) as salesnc, i.comn, a.linearrivedat, 
isnull(d.cusnc,'') as setnc, b.cusnc, isnull(j.codenc,'') as casetype, '' as speed, isnull(k.codenc,'') as paycycle, 
b.finishdat, b.docketdat, b.dropdat, replace(b.freecode,'N','') as freecode 
from	RTSparq499CmtyLine a 
inner join RTSparq499Cust b on a.comq1 = b.comq1 and a.lineq1 = b.lineq1 
inner join RTSparq499CmtyH i on i.comq1 = b.comq1 
left outer join RTEmployee f inner join RTObj g on f.cusid = g.cusid on a.salesid = f.emply 
left outer join RTObj h on h.cusid = a.consignee 
left outer join RTEmployee c inner join RTObj d on c.cusid = d.cusid on b.setemply = c.emply 
left outer join RTCode j on j.code = b.casetype and j.kind ='L9' 
left outer join RTCode k on k.code = b.PAYTYPE and k.kind ='M1' 
where	a.canceldat is null and b.canceldat is null 
and 1=1
union 
select 'Avs City' as casetype, case a.consignee when '' then '直銷' else '經銷' end as belongnc, 
isnull(h.shortnc, g.cusnc) as salesnc, i.comn, a.hardwaredat as linearrivedat, 
isnull(isnull(e.shortnc, d.cusnc),'') as setnc, b.cusnc, isnull(k.codenc,'') as casekind, b.userrate as speed, isnull(l.codenc,'') as paycycle, 
b.finishdat, b.docketdat, b.dropdat, replace(b.freecode,'N','') as freecode 
from	RTLessorAvsCmtyLine a 
inner join RTLessorAvsCust b on a.comq1 = b.comq1 and a.lineq1 = b.lineq1 
inner join RTLessorAvsCmtyH i on i.comq1 = b.comq1 
left outer join RTEmployee f inner join RTObj g on f.cusid = g.cusid on a.salesid = f.emply 
left outer join RTObj h on h.cusid = a.consignee 
left outer join RTLessorAVSCustSndwork j on j.cusid = b.cusid and j.dropdat is null 
left outer join RTEmployee c inner join RTObj d on c.cusid = d.cusid on j.realengineer = c.emply 
left outer join RTObj e on e.cusid = j.realconsignee 
left outer join RTCode k on k.code = b.casekind and k.kind ='O9' 
left outer join RTCode l on l.code = b.PAYTYPE and l.kind ='M8' 
where	a.canceldat is null and b.canceldat is null 
and 1=1
union 
select	'ET City' as casetype, case a.consignee when '' then '直銷' else '經銷' end as belongnc, 
isnull(h.shortnc, g.cusnc) as salesnc, i.comn, a.hardwaredat as linearrivedat, 
isnull(isnull(e.shortnc, d.cusnc),'') as setnc, b.cusnc, isnull(k.codenc,'') as casekind, b.userrate as speed, isnull(l.codenc,'') as paycycle, 
b.finishdat, b.docketdat, b.dropdat, replace(b.freecode,'N','') as freecode 
from	RTLessorCmtyLine a 
inner join RTLessorCust b on a.comq1 = b.comq1 and a.lineq1 = b.lineq1 
inner join RTLessorCmtyH i on i.comq1 = b.comq1 
left outer join RTEmployee f inner join RTObj g on f.cusid = g.cusid on a.salesid = f.emply 
left outer join RTObj h on h.cusid = a.consignee 
left outer join RTLessorCustSndwork j on j.cusid = b.cusid and j.dropdat is null 
left outer join RTEmployee c inner join RTObj d on c.cusid = d.cusid on j.realengineer = c.emply 
left outer join RTObj e on e.cusid = j.realconsignee 
left outer join RTCode k on k.code = b.casekind and k.kind ='O9' 
left outer join RTCode l on l.code = b.PAYTYPE and l.kind ='M8' 
where	a.canceldat is null and b.canceldat is null 
and 1=1
union 
select 'So-net' as casetype, case i.consignee when '' then '直銷' else '經銷' end as belongnc, 
isnull(h.shortnc, g.cusnc) as salesnc, i.comn, a.hardwaredat as linearrivedat, 
isnull(isnull(e.shortnc, d.cusnc),'') as setnc, b.cusnc, '' as casekind, isnull(k.codenc,'') as speed, isnull(l.codenc,'') as paycycle, 
b.finishdat, b.docketdat, b.dropdat, replace(b.freecode,'N','') as freecode 
from	RTSonetCmtyLine a 
inner join RTSonetCust b on a.comq1 = b.comq1 and a.lineq1 = b.lineq1 
inner join RTSonetCmtyH i on i.comq1 = b.comq1 
left outer join RTEmployee f inner join RTObj g on f.cusid = g.cusid on i.salesid = f.emply 
left outer join RTObj h on h.cusid = i.consignee 
left outer join RTSonetSndwrk j on j.cusid = b.cusid and j.canceldat is null and j.wrktyp = '02' 
left outer join RTEmployee c inner join RTObj d on c.cusid = d.cusid on j.finisheng = c.emply 
left outer join RTObj e on e.cusid = j.finishcons 
left outer join RTCode k on k.code = b.userrate and k.kind ='R3' 
left outer join RTCode l on l.code = b.paycycle and l.kind ='M8' 
where	a.canceldat is null and b.canceldat is null 
and 1=1
union 
select '遠傳大寬頻社區型' as casetype, case i.consignee when '' then '直銷' else '經銷' end as belongnc, 
isnull(h.shortnc, g.cusnc) as salesnc, i.comn, a.hardwaredat as linearrivedat, 
isnull(isnull(e.shortnc, d.cusnc),'') as setnc, b.cusnc, '' as casekind, isnull(k.codenc,'') as speed, isnull(l.codenc,'') as paycycle, 
b.finishdat, b.docketdat, b.dropdat, replace(b.freecode,'N','') as freecode 
from	RTfareastCmtyLine a 
inner join RTfareastCust b on a.comq1 = b.comq1 and a.lineq1 = b.lineq1 
inner join RTfareastCmtyH i on i.comq1 = b.comq1 
left outer join RTEmployee f inner join RTObj g on f.cusid = g.cusid on i.salesid = f.emply 
left outer join RTObj h on h.cusid = i.consignee 
left outer join RTfareastSndwrk j on j.cusid = b.cusid and j.canceldat is null and j.wrktyp = '02' 
left outer join RTEmployee c inner join RTObj d on c.cusid = d.cusid on j.finisheng = c.emply 
left outer join RTObj e on e.cusid = j.finishcons 
left outer join RTCode k on k.code = b.userrate and k.kind ='R6' 
left outer join RTCode l on l.code = b.paycycle and l.kind ='M8' 
where	a.canceldat is null and b.canceldat is null 
) a</value>
  </data>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>