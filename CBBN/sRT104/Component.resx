<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serviceManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>159, 159</value>
  </metadata>
  <metadata name="InfoConnection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>159, 120</value>
  </metadata>
  <metadata name="RTLessorAVSCust.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>648, 190</value>
  </metadata>
  <metadata name="ucRTLessorAVSCust.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>640, 134</value>
  </metadata>
  <metadata name="RTLessorAVSCustCont.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>702, 321</value>
  </metadata>
  <metadata name="ucRTLessorAVSCustCont.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>710, 370</value>
  </metadata>
  <metadata name="RTLessorAVSCustDrop.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1020, 312</value>
  </metadata>
  <metadata name="ucRTLessorAVSCustDrop.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1036, 362</value>
  </metadata>
  <metadata name="RTLessorAVSCustReturn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>394, 324</value>
  </metadata>
  <metadata name="ucRTLessorAVSCustReturn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>389, 374</value>
  </metadata>
  <metadata name="idRTLessorAVSCust_RTLessorAVSCustCont.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>667, 272</value>
  </metadata>
  <metadata name="idRTLessorAVSCust_RTLessorAVSCustDrop.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>998, 272</value>
  </metadata>
  <metadata name="idRTLessorAVSCust_RTLessorAVSCustReturn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>345, 272</value>
  </metadata>
  <metadata name="View_RTLessorAVSCust.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>152, 68</value>
  </metadata>
  <metadata name="V_RTLessorAVSCustFaqH.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>34, 461</value>
  </metadata>
  <data name="V_RTLessorAVSCustFaqH.CommandText" xml:space="preserve">
    <value>SELECT RTLessorAVSCustFaqH.CUSID,RTLessorAVSCustFaqH.FAQNO,RTLessorAVSCustFaqH.RCVDAT, RTCode.CODENC,
LEFT(RTLessorAVSCustFaqH.MEMO, 15) AS memo15,RTLessorAVSCustFaqH.CONTACTTEL, RTLessorAVSCustFaqH.MOBILE,
RTLessorAVSCustFaqH.SNDWORK, RTObj_4.CUSNC AS CUSNC1, RTLessorAVSCustFaqH.SNDPRTNO,
RTLessorAVSCustFaqH.SNDCLOSEDAT, RTLessorAVSCustFaqH.CALLBACKDAT,
RTObj_5.CUSNC AS CUSNC2, RTLessorAVSCustFaqH.FINISHDAT, RTObj_6.CUSNC AS CUSNC3,
RTObj_1.CUSNC AS CUSNC4, RTObj_2.CUSNC AS CUSNC5,
RTObj_3.CUSNC AS CUSNC6, CASE WHEN RTLessorAVSCustFaqH.finishdat IS NULL THEN
datediff(dd, RTLessorAVSCustFaqH.rcvdat, getdate()) + 1 ELSE
datediff(dd, RTLessorAVSCustFaqH.rcvdat, RTLessorAVSCustFaqH.finishdat) + 1 END AS PROCESSDAT
FROM RTEmployee RTEmployee_5 INNER JOIN RTObj RTObj_5 ON RTEmployee_5.CUSID = RTObj_5.CUSID
RIGHT OUTER JOIN RTLessorAVSCustFaqH ON RTEmployee_5.EMPLY = RTLessorAVSCustFaqH.CALLBACKUSR
LEFT OUTER JOIN RTEmployee RTEmployee_4 INNER JOIN RTObj RTObj_4 ON RTEmployee_4.CUSID =
RTObj_4.CUSID ON RTLessorAVSCustFaqH.SNDUSR = RTEmployee_4.EMPLY LEFT OUTER JOIN
RTEmployee RTEmployee_3 INNER JOIN RTObj RTObj_3 ON RTEmployee_3.CUSID = RTObj_3.CUSID ON
RTLessorAVSCustFaqH.UUSR = RTEmployee_3.EMPLY LEFT OUTER JOIN RTEmployee RTEmployee_2 INNER JOIN
RTObj RTObj_2 ON RTEmployee_2.CUSID = RTObj_2.CUSID ON RTLessorAVSCustFaqH.EUSR = RTEmployee_2.EMPLY
LEFT OUTER JOIN RTEmployee RTEmployee_1 INNER JOIN RTObj RTObj_1 ON RTEmployee_1.CUSID =
RTObj_1.CUSID ON RTLessorAVSCustFaqH.CANCELUSR = RTEmployee_1.EMPLY LEFT OUTER JOIN
RTObj RTObj_6 INNER JOIN RTEmployee RTEmployee_6 ON RTObj_6.CUSID = RTEmployee_6.CUSID ON
RTLessorAVSCustFaqH.FUSR = RTEmployee_6.EMPLY LEFT OUTER JOIN RTCode ON
RTLessorAVSCustFaqH.SERVICETYPE = RTCode.CODE AND RTCode.KIND = 'N4'
WHERE    RTLessorAVSCustFaqH.canceldat IS NULL </value>
  </data>
  <metadata name="V_RTLessorAVSCustCont.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>231, 461</value>
  </metadata>
  <data name="V_RTLessorAVSCustCont.CommandText" xml:space="preserve">
    <value>SELECT RTLessorAVSCustCont.CUSID, RTLessorAVSCustCont.ENTRYNO,RTLessorAVSCust.CUSNC,
RTLessorAVSCustCont.ENTRYNO AS ENTRYNO, RTLessorAVSCustCont.APPLYDAT, RTLessorAVSCustCont.STRBILLINGDAT,
RTCode_2.CODENC AS PAYCYCLE, RTCode_1.CODENC AS PAYTYPE, RTLessorAVSCustCont.PERIOD, RTLessorAVSCustCont.SECONDCASE,
RTLessorAVSCustCont.AMT, RTLessorAVSCustCont.REALAMT, RTLessorAVSCustCont.TARDAT, RTLessorAVSCustCont.BATCHNO,
RTLessorAVSCustCont.FINISHDAT,
CASE WHEN RTLessorAVSCustCont.FINISHDAT IS NULL THEN DATEDIFF(dd,RTLessorAVSCustCont.APPLYDAT,getdate())+1 ELSE DATEDIFF(dd,RTLessorAVSCustCont.APPLYDAT,RTLessorAVSCustCont.finishdat)+1  END AS PROCESSDAT 
FROM RTLessorAVSCustCont LEFT OUTER JOIN RTCode RTCode_1 ON RTLessorAVSCustCont.PAYTYPE = RTCode_1.CODE
AND RTCode_1.KIND = 'M9' LEFT OUTER JOIN RTLessorAVSCust ON RTLessorAVSCustCont.CUSID =
RTLessorAVSCust.CUSID LEFT OUTER JOIN RTCode RTCode_2 ON RTLessorAVSCustCont.PAYCYCLE = RTCode_2.CODE
AND RTCode_2.KIND = 'M8'
WHERE   RTLessorAVSCustCont.canceldat IS NULL </value>
  </data>
  <metadata name="V_RTLessorAVSCustDrop.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>426, 461</value>
  </metadata>
  <data name="V_RTLessorAVSCustDrop.CommandText" xml:space="preserve">
    <value>SELECT  RTLessorAVSCustDrop.CUSID,RTLessorAVSCustDrop.ENTRYNO,RTCODE.CODENC,RTLessorAVSCustDrop.APPLYDAT,
RTLessorAVSCustDrop.ENDDAT,RTLessorAVSCustDrop.FINISHDAT, RTObj.CUSNC as cusnc1, RTLessorAVSCustDrop.SNDPRTNO, 
RTLessorAVSCustDrop.SNDWORK,RTLessorAVSCustDrop.SNDWORKCLOSE,RTLessorAVSCustDrop.tardat,
RTLessorAVSCustDrop.batchno, RTLessorAVSCustDrop.CANCELDAT, 
RTObj_1.CUSNC  as cusnc2, RTObj_2.CUSNC  as cusnc3, RTObj_3.CUSNC  as cusnc4, 
case when RTLessorAVSCustDrop.FINISHDAT is null then DATEDIFF(dd,RTLessorAVSCustDrop.APPLYDAT,getdate())+1 else DATEDIFF(dd,RTLessorAVSCustDrop.APPLYDAT,RTLessorAVSCustDrop.FINISHDAT)+1 end as processdat 
FROM RTEmployee RTEmployee_3 INNER JOIN RTObj RTObj_3 ON RTEmployee_3.CUSID = RTObj_3.CUSID RIGHT OUTER JOIN 
RTLessorAVSCustDrop ON RTEmployee_3.EMPLY = RTLessorAVSCustDrop.UUSR LEFT OUTER JOIN 
RTEmployee RTEmployee_2 INNER JOIN RTObj RTObj_2 ON RTEmployee_2.CUSID = RTObj_2.CUSID ON 
RTLessorAVSCustDrop.EUSR = RTEmployee_2.EMPLY LEFT OUTER JOIN RTEmployee RTEmployee_1 INNER JOIN 
RTObj RTObj_1 ON RTEmployee_1.CUSID = RTObj_1.CUSID ON RTLessorAVSCustDrop.CANCELUSR = 
RTEmployee_1.EMPLY LEFT OUTER JOIN RTObj INNER JOIN RTEmployee ON RTObj.CUSID = RTEmployee.CUSID ON 
RTLessorAVSCustDrop.FUSR = RTEmployee.EMPLY  LEFT OUTER JOIN RTCODE ON RTLessorAVSCustDrop.DROPKIND=RTCODE.CODE AND RTCODE.KIND='N7' 
where RTLessorAVSCustDrop.canceldat is null</value>
  </data>
  <metadata name="V_RTLessorAVSCustReturn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>622, 461</value>
  </metadata>
  <data name="V_RTLessorAVSCustReturn.CommandText" xml:space="preserve">
    <value>SELECT RTLessorAVSCustReturn.CUSID, RTLessorAVSCustReturn.ENTRYNO,RTLessorAVSCust.CUSNC,
RTLessorAVSCustReturn.ENTRYNO AS ENTRYNO, RTLessorAVSCustReturn.APPLYDAT, RTLessorAVSCustReturn.STRBILLINGDAT,
RTCode_2.CODENC AS PAYCYCLE, RTCode_1.CODENC AS PAYTYPE, RTLessorAVSCustReturn.PERIOD, RTLessorAVSCustReturn.SECONDCASE,
RTLessorAVSCustReturn.AMT, RTLessorAVSCustReturn.REALAMT, RTLessorAVSCustReturn.TARDAT, RTLessorAVSCustReturn.BATCHNO,
RTLessorAVSCustReturn.FINISHDAT,
CASE WHEN RTLessorAVSCustReturn.FINISHDAT IS NULL THEN DATEDIFF(dd,RTLessorAVSCustReturn.APPLYDAT,getdate())+1 ELSE DATEDIFF(dd,RTLessorAVSCustReturn.APPLYDAT,RTLessorAVSCustReturn.finishdat)+1  END AS PROCESSDAT 
FROM RTLessorAVSCustReturn LEFT OUTER JOIN RTCode RTCode_1 ON RTLessorAVSCustReturn.PAYTYPE = RTCode_1.CODE
AND RTCode_1.KIND = 'M9' LEFT OUTER JOIN RTLessorAVSCust ON RTLessorAVSCustReturn.CUSID =
RTLessorAVSCust.CUSID LEFT OUTER JOIN RTCode RTCode_2 ON RTLessorAVSCustReturn.PAYCYCLE = RTCode_2.CODE
AND RTCode_2.KIND = 'M8'
WHERE   RTLessorAVSCustReturn.canceldat IS NULL </value>
  </data>
  <metadata name="V_RTLessorAVSCustAR.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>828, 461</value>
  </metadata>
  <data name="V_RTLessorAVSCustAR.CommandText" xml:space="preserve">
    <value>SELECT RTLessorAVSCustAR.CUSID, RTLessorAVSCustAR.BATCHNO, RTCode.CODENC, RTLessorAVSCustAR.PERIOD,
RTLessorAVSCustAR.AMT, RTLessorAVSCustAR.REALAMT,
CASE WHEN RTLessorAVSCustAR.CANCELDAT IS NOT NULL THEN 0 ELSE RTLessorAVSCustAR.AMT - RTLessorAVSCustAR.REALAMT END AS DIFFAMT, 
RTLessorAVSCustAR.COD1, RTLessorAVSCustAR.COD2, RTLessorAVSCustAR.COD3, RTLessorAVSCustAR.COD4, RTLessorAVSCustAR.COD5,
RTLessorAVSCustAR.CDAT, RTLessorAVSCustAR.MDAT, RTLessorAVSCustAR.CANCELDAT
FROM RTLessorAVSCustAR LEFT OUTER JOIN RTCode ON RTLessorAVSCustAR.ARTYPE = RTCode.CODE AND
RTCode.KIND = 'N2'
WHERE  RTLessorAVSCustAR.canceldat IS NULL 
ORDER BY RTLessorAVSCustAR.CDAT </value>
  </data>
  <metadata name="autoNumber1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>659, 74</value>
  </metadata>
  <metadata name="RT104A.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>38, 498</value>
  </metadata>
  <data name="RT104A.CommandText" xml:space="preserve">
    <value>SELECT * FROM (
SELECT         RTLessorAVSCustHardware.CUSID, RTLessorAVSCustHardware.PRTNO,
RTLessorAVSCustHardware.ENTRYNO,'新戶' AS Column1,'' AS Column2, RTLessorAVSCustHardware.PRODNO,
 RTLessorAVSCustHardware.ITEMNO, RTProdH.PRODNC, RTProdD1.SPEC,
 RTLessorAVSCustHardware.QTY, RTLessorAVSCustHardware.AMT,
 RTLessorAVSCustSndwork.CLOSEDAT, RTLessorAVSCustHardware.BATCHNO,
 ISNULL(RTLessorAVSCustAR.REALAMT,0) AS Column3, RTLessorAVSCustHardware.RCVPRTNO,
 RTLessorAVSCustRCVHardware.CLOSEDAT AS Expr1
FROM             RTLessorAVSCustHardware LEFT OUTER JOIN
RTLessorAVSCustRCVHardware ON 
RTLessorAVSCustHardware.RCVPRTNO = RTLessorAVSCustRCVHardware.RCVPRTNO AND
 RTLessorAVSCustRCVHardware.CANCELDAT IS NULL LEFT OUTER JOIN
RTLessorAVSCustAR ON 
RTLessorAVSCustHardware.BATCHNO = RTLessorAVSCustAR.BATCHNO AND 
RTLessorAVSCustHardware.CUSID = RTLessorAVSCustAR.CUSID AND 
RTLessorAVSCustAR.CANCELDAT IS NULL LEFT OUTER JOIN
RTLessorAVSCustSndwork ON 
RTLessorAVSCustHardware.PRTNO = RTLessorAVSCustSndwork.PRTNO AND 
RTLessorAVSCustSndwork.DROPDAT IS NULL AND 
RTLessorAVSCustSndwork.UNCLOSEDAT IS NULL LEFT OUTER JOIN
RTProdD1 ON RTLessorAVSCustHardware.PRODNO = RTProdD1.PRODNO AND 
RTLessorAVSCustHardware.ITEMNO = RTProdD1.ITEMNO LEFT OUTER JOIN
RTProdH ON 
                         RTLessorAVSCustHardware.PRODNO = RTProdH.PRODNO LEFT OUTER JOIN
RTLessorAVSCust ON 
RTLessorAVSCustHardware.CUSID = RTLessorAVSCust.CUSID
WHERE         (RTLessorAVSCustHardware.DROPDAT IS NULL) 
UNION
SELECT         RTLessorAVSCustContHardware.CUSID, RTLessorAVSCustContHardware.PRTNO, 
RTLessorAVSCustContHardware.SEQ,'續約','', RTLessorAVSCustContHardware.PRODNO, 
RTLessorAVSCustContHardware.ITEMNO, RTProdH.PRODNC, RTProdD1.SPEC, 
RTLessorAVSCustContHardware.QTY, RTLessorAVSCustContHardware.AMT, 
RTLessorAVSCustContSndwork.CLOSEDAT, RTLessorAVSCustContHardware.BATCHNO, 
ISNULL(RTLessorAVSCustAR.REALAMT,0), RTLessorAVSCustContHardware.RCVPRTNO, 
RTLessorAVSCustRCVHardware.CLOSEDAT AS Expr1
FROM             RTLessorAVSCustContHardware LEFT OUTER JOIN
RTLessorAVSCustRCVHardware ON 
RTLessorAVSCustContHardware.RCVPRTNO = RTLessorAVSCustRCVHardware.RCVPRTNO AND
 RTLessorAVSCustRCVHardware.CANCELDAT IS NULL LEFT OUTER JOIN 
RTLessorAVSCustAR ON 
RTLessorAVSCustContHardware.BATCHNO = RTLessorAVSCustAR.BATCHNO AND 
RTLessorAVSCustContHardware.CUSID = RTLessorAVSCustAR.CUSID AND 
RTLessorAVSCustAR.CANCELDAT IS NULL LEFT OUTER JOIN
RTLessorAVSCustContSndwork ON 
RTLessorAVSCustContHardware.PRTNO = RTLessorAVSCustContSndwork.PRTNO AND 
RTLessorAVSCustContSndwork.DROPDAT IS NULL AND 
RTLessorAVSCustContSndwork.UNCLOSEDAT IS NULL LEFT OUTER JOIN
RTProdD1 ON RTLessorAVSCustContHardware.PRODNO = RTProdD1.PRODNO AND 
RTLessorAVSCustContHardware.ITEMNO = RTProdD1.ITEMNO LEFT OUTER JOIN
RTProdH ON 
RTLessorAVSCustContHardware.PRODNO = RTProdH.PRODNO LEFT OUTER JOIN
RTLessorAVSCust ON 
RTLessorAVSCustContHardware.CUSID = RTLessorAVSCust.CUSID
WHERE         (RTLessorAVSCustContHardware.DROPDAT IS NULL) 
UNION
SELECT         RTLessorAVSCustReturnHardware.CUSID, RTLessorAVSCustReturnHardware.PRTNO, 
RTLessorAVSCustReturnHardware.SEQ,'復機','', RTLessorAVSCustReturnHardware.PRODNO, 
RTLessorAVSCustReturnHardware.ITEMNO, RTProdH.PRODNC, RTProdD1.SPEC, 
RTLessorAVSCustReturnHardware.QTY, RTLessorAVSCustReturnHardware.AMT, 
RTLessorAVSCustReturnSndwork.CLOSEDAT, RTLessorAVSCustReturnHardware.BATCHNO, 
ISNULL(RTLessorAVSCustAR.REALAMT,0), RTLessorAVSCustReturnHardware.RCVPRTNO, 
RTLessorAVSCustRCVHardware.CLOSEDAT AS Expr1
FROM             RTLessorAVSCustReturnHardware LEFT OUTER JOIN
RTLessorAVSCustRCVHardware ON 
RTLessorAVSCustReturnHardware.RCVPRTNO = RTLessorAVSCustRCVHardware.RCVPRTNO AND
 RTLessorAVSCustRCVHardware.CANCELDAT IS NULL LEFT OUTER JOIN
RTLessorAVSCustAR ON 
RTLessorAVSCustReturnHardware.BATCHNO = RTLessorAVSCustAR.BATCHNO AND 
RTLessorAVSCustReturnHardware.CUSID = RTLessorAVSCustAR.CUSID AND 
RTLessorAVSCustAR.CANCELDAT IS NULL LEFT OUTER JOIN
RTLessorAVSCustReturnSndwork ON 
RTLessorAVSCustReturnHardware.PRTNO = RTLessorAVSCustReturnSndwork.PRTNO AND 
RTLessorAVSCustReturnSndwork.DROPDAT IS NULL AND 
RTLessorAVSCustReturnSndwork.UNCLOSEDAT IS NULL LEFT OUTER JOIN
RTProdD1 ON RTLessorAVSCustReturnHardware.PRODNO = RTProdD1.PRODNO AND 
RTLessorAVSCustReturnHardware.ITEMNO = RTProdD1.ITEMNO LEFT OUTER JOIN
RTProdH ON 
RTLessorAVSCustReturnHardware.PRODNO = RTProdH.PRODNO LEFT OUTER JOIN
RTLessorAVSCust ON 
RTLessorAVSCustReturnHardware.CUSID = RTLessorAVSCust.CUSID
WHERE         (RTLessorAVSCustReturnHardware.DROPDAT IS NULL) 
UNION
SELECT         RTLessorAVSCustFaqHardware.CUSID, RTLessorAVSCustFaqHardware.PRTNO, 
RTLessorAVSCustFaqHardware.seq,'客服',RTLessorAVSCustFaqHardware.FAQNO, RTLessorAVSCustFaqHardware.PRODNO, 
RTLessorAVSCustFaqHardware.ITEMNO, RTProdH.PRODNC, RTProdD1.SPEC, 
RTLessorAVSCustFaqHardware.QTY, RTLessorAVSCustFaqHardware.AMT, 
RTLessorAVSCustFaqSndwork.CLOSEDAT, RTLessorAVSCustFaqHardware.BATCHNO, 
ISNULL(RTLessorAVSCustAR.REALAMT,0), RTLessorAVSCustFaqHardware.RCVPRTNO, 
RTLessorAVSCustRCVHardware.CLOSEDAT AS Expr1
FROM             RTLessorAVSCustFaqHardware LEFT OUTER JOIN
RTLessorAVSCustRCVHardware ON 
RTLessorAVSCustFaqHardware.RCVPRTNO = RTLessorAVSCustRCVHardware.RCVPRTNO AND
 RTLessorAVSCustRCVHardware.CANCELDAT IS NULL LEFT OUTER JOIN
RTLessorAVSCustAR ON 
RTLessorAVSCustFaqHardware.BATCHNO = RTLessorAVSCustAR.BATCHNO AND 
RTLessorAVSCustFaqHardware.CUSID = RTLessorAVSCustAR.CUSID AND 
RTLessorAVSCustAR.CANCELDAT IS NULL LEFT OUTER JOIN
RTLessorAVSCustFaqSndwork ON 
RTLessorAVSCustFaqHardware.PRTNO = RTLessorAVSCustFaqSndwork.PRTNO AND 
RTLessorAVSCustFaqSndwork.DROPDAT IS NULL AND 
RTLessorAVSCustFaqSndwork.UNCLOSEDAT IS NULL LEFT OUTER JOIN
RTProdD1 ON RTLessorAVSCustFaqHardware.PRODNO = RTProdD1.PRODNO AND 
RTLessorAVSCustFaqHardware.ITEMNO = RTProdD1.ITEMNO LEFT OUTER JOIN
RTProdH ON 
RTLessorAVSCustFaqHardware.PRODNO = RTProdH.PRODNO LEFT OUTER JOIN
RTLessorAVSCust ON 
RTLessorAVSCustFaqHardware.CUSID = RTLessorAVSCust.CUSID
WHERE         (RTLessorAVSCustFaqHardware.DROPDAT IS NULL) ) A</value>
  </data>
  <metadata name="cmd.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>134, 498</value>
  </metadata>
  <metadata name="cmdRT104B.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>215, 496</value>
  </metadata>
  <metadata name="infoParameter1.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="infoParameter2.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="infoParameter3.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="infoParameter4.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="cmdRT104C.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>343, 496</value>
  </metadata>
  <metadata name="infoParameter5.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="infoParameter6.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="infoParameter7.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="infoParameter8.IsNullable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="RT104D.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>465, 496</value>
  </metadata>
  <data name="RT104D.CommandText" xml:space="preserve">
    <value>SELECT     RTLessorAVSCUSTLOG.CUSID, RTLessorAVSCUSTLOG.ENTRYNO, 
RTRIM(CONVERT(char(6), RTLessorAVScust.COMQ1)) 
+ '-' + RTRIM(CONVERT(char(6), RTLessorAVScust.LINEQ1)) AS comqline, 
RTLessorAVSCUSTLOG.CHGDAT, RTCode.CODENC, RTObj.CUSNC, 
RTLessorAVSCUSTLOG.APPLYDAT,RTLessorAVSCUSTLOG.FINISHDAT, RTLessorAVSCUSTLOG.strbillingDAT, 
RTLessorAVSCUSTLOG.NEWBILLINGDAT,RTLessorAVSCUSTLOG.DROPDAT, RTLessorAVSCUSTLOG.FREECODE 
FROM          RTObj INNER JOIN 
RTEmployee ON RTObj.CUSID = RTEmployee.CUSID RIGHT OUTER JOIN 
RTLessorAVSCUSTLOG ON 
RTEmployee.EMPLY = RTLessorAVSCUSTLOG.CHGUSR LEFT OUTER JOIN 
RTCode ON RTLessorAVSCUSTLOG.CHGCODE = RTCode.CODE AND  
RTCode.KIND = 'G2' left outer join 
RTLessorAVScust on RTLessorAVSCUSTLOG.cusid=RTLessorAVScust.cusid 
where 1=1 
ORDER BY ENTRYNO</value>
  </data>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>